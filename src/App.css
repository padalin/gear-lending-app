import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { collection, onSnapshot } from "firebase/firestore";
import { db } from "./firebase";
import Navbar from "./Navbar";
import CategorySection from "./CategorySection";

function App() {
  const [items, setItems] = useState([]);
  const [expandedCategories, setExpandedCategories] = useState({});
  const [searchTerm, setSearchTerm] = useState("");

  useEffect(() => {
    const unsubscribe = onSnapshot(collection(db, "items"), (snapshot) => {
      const fetched = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
      setItems(fetched);

      const defaultExpanded = {};
      fetched.forEach((item) => {
        defaultExpanded[item.category] = true;
      });
      setExpandedCategories(defaultExpanded);
    });
    return () => unsubscribe();
  }, []);

  const toggleCategory = (cat) => {
    setExpandedCategories((prev) => ({
      ...prev,
      [cat]: !prev[cat],
    }));
  };

  const filterItem = (item) => {
    const target = `${item.label} ${item.category} ${item.brand} ${item.model} ${item.class} ${item.remarksA} ${item.remarksB}`.toLowerCase();
    return target.includes(searchTerm.toLowerCase());
  };

  const filtered = items.filter(filterItem);

  const grouped = filtered.reduce((acc, item) => {
    const cat = item.category || "未分類";
    if (!acc[cat]) acc[cat] = [];
    acc[cat].push(item);
    return acc;
  }, {});

  return (
    <div className="min-h-screen bg-gray-900 text-gray-100">
      <Navbar />
      <main className="pt-20 px-4 max-w-6xl mx-auto">
        <h1 className="text-2xl font-bold mb-4">器材清單</h1>

        <div className="flex gap-4 mb-6">
          <Link
            to="/borrow"
            className="bg-white text-gray-900 border border-gray-300 hover:bg-gray-100 font-semibold px-6 py-2 rounded shadow"
          >
            借用器材
          </Link>
          <Link
            to="/return"
            className="bg-white text-gray-900 border border-gray-300 hover:bg-gray-100 font-semibold px-6 py-2 rounded shadow"
          >
            歸還器材
          </Link>
        </div>

        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6">
          <input
            type="text"
            placeholder="搜尋器材名稱、分類、品牌..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full sm:max-w-xs px-4 py-2 border border-gray-600 rounded bg-gray-800 text-white placeholder-gray-400"
          />
        </div>

        {Object.entries(grouped).map(([cat, list]) => (
          <CategorySection
            key={cat}
            category={cat}
            items={list}
            expanded={expandedCategories[cat]}
            onToggle={() => toggleCategory(cat)}
          />
        ))}
      </main>
    </div>
  );
}

export default App;
